<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ImportarFrequencia.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAQ
        SwAAEEsB549FewAAAAd0SU1FB90EAQ4hBdkjqJIAAAJ4SURBVDhPhZNvSBNxHMZ/aZnGoqI/kEkUQX9h
        Br2MvQuUselWQW8CITFIEoJAy/5Qp950Ub4QzY25M7RZ1KzIsFgbWlG4wOUr2Q3HStoZxCYL9WpsT9/d
        XYGl+MCH5/fl930e7g6O5ZTNZi2Em3AuRSaTcRuNxjPK8lKipQGsIL1en6bVOjXxj+heUNeWl8VigU6n
        +1VcXFwbCATytagqul+xIBqNgoLw+XxfZ2dnd2tRVXSvFNCrLMsf0XmaOKBFVcmyrBSQL8tPOa0UyPLC
        Z5r3aVFVyWRSSKfTIP+PRDKBVGIO80kZC/IPJBLJXMFeLapKkiQhlUohHo8vQopLSMbnIH2LwTVThbeJ
        DixImVh2PrtTi6oSRVHIBSKRiIIYETElxiBNzeB91IPqycMoGWOonTwIZ6Tm+8nJbVdKw6yqdJyp3yIU
        CgnhcBjkChOhCYx/CuLO+Hno/WtQ+JRhwyDDpufEMMP21wwl78hfskalYGRkRAgGgxgdHVUYe/MR132n
        sKqHgXUyFHUzrCMK76oUOQg3nTtZvVIwNDQk+P1+kCsMv3iF3mcdsLoMKOCphGNY3UzepJJnp7mdIZ/T
        nqC/v1/wer0g/8tDjxeDA4/R4LiArdd0YBcZNl5djz03ds0XXC74wC6xQF4DsygFDoejt6+vD06ncxEu
        Zw88PQ/Q1n0TR5uP4FznaTxyP4mJ3ukdSjAng8GwluO4LrvdDp7nMy0tLchhs9kUeBuP263tsLfysLU1
        geOavlRXnzUZjxn3m0ymzaysrGxLeXn5icrKynqizWw2dxCuioqK+zQr0OyxmK33rObjXRS6RTTSz1Vj
        tVoP/QbIMm6DJKivgAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB9AAAAWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA4AQAAtAIAAf8BAAD9AQAAoQAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABYAAABxAQAAxwIAAf4CAAH/AgAB/wIAAf8CAAH/AQAA/gEAALkAAABPAAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACsBAACgAQAA+AIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8BAADpAQAAjwAA
        ACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABEBAAClAQAA/QIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AQAA/AEAAJEAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA3AQAA4gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wEAAM8AAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAVAEAAPcCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wEAAOsAAAA2AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFEBAAD8AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wEAAPEAAAAzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAaAQAA8AIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8BAACuAQAAowEA
        AKMBAADgAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wEA
        AN0AAAAJAAAAAAAAAAAAAAAAAAAAAAEAAJECAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wAA
        AB8AAAAAAAAAAAEAAKkCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wAAAG8AAAAAAAAAAAAAAAAAAAACAQAA6wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AAAAHwAAAAAAAAAAAQAAqQIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AQAAzAAAAAAAAAAAAAAAAAAAACYCAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8AAAAfAAAAAAAAAAABAACpAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8BAAD8AAAACAAAAAAAAAAAAAAAPgIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wAAAB8AAAAAAAAAAAEAAKkCAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAdAAAAAAAAAAAAAAAtAgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AAAAHwAAAAAAAAAAAQAAqQIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AQAA/QAAAAwAAAAAAAAAAAAA
        AAUBAAD1AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAfAAAAAAAAAAAAAAA/AAAAXwAA
        AGAAAABqAQAAjgEAAOECAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8BAADRAAAAAAAA
        AAAAAAAAAAAAAAEAALgCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wAAAB8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABwEAAKcCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wEA
        AIcAAAAAAAAAAAAAAAAAAAAAAAAAaAIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AAAAHwAA
        AAAAAAAAAAAANQAAAEUAAAA2AAAABQAAAAAAAAAAAAAACAEAAOACAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAXAQAA/AIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8AAAAfAAAAAAAAAAABAADBAgAB/wIAAf8BAADbAAAAEwAAAAAAAAAAAQAAgQIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wEAAN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAADCAgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wAAAB8AAAAAAAAAAAEAAMECAAH/AgAB/wIAAf8AAABhAAAAAAAAAAAAAABUAgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AQAAkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAIICAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AAAAHwAAAAAAAAAAAQAAwQIAAf8CAAH/AgAB/wAAAFwAAAAAAAAAAAAA
        AFUCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAABWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAfAAAAAAAAAAABAAC7AQAA9wEAAO4BAACqAAAACgAA
        AAAAAAAAAQAAiAIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wAAADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABdAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABsBAADtAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AAAAPQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAHsCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AAAAHwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA/AQAA2wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAABfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQAArQIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8BAACvAQAApAEA
        AKQBAACkAQAApAEAAKcBAAC4AQAA4gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wEA
        AJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUBAADuAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AQAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AAAAOwAAAAAAAAAAAAAAAAAAAAABAADFAgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8BAACxAAAAAAAAAAAAAAAAAAAAEAEAAOMCAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wEAAPcAAAAXAAAAAAAAAAAAAAAAAAAAIwEA
        AOECAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8BAAD3AAAASQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIAEAAN4CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf4BAAD4AQAB/AIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wEAAPcBAAD4AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AQAA9gAAAEYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHgEAANsCAAH/AQAA9gEAAJkAAABEAAAAEAAAAAAAAAACAAAAIQAA
        AGIBAADAAQAArAAAAE4AAAATAAAAAAAAAAAAAAATAAAASQEAAKMBAAD6AgAB/wEAAPQAAABDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwEAAJoAAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoBAADDAAAAQAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//5////4H///wAP//wAA//wAAD/4AAAf8AAAD+AAAAfAAAADwAwAA4AM
        AAOADAABgAwAAYAMAAGADAADwA/gA8AMMAPADBgH4AwYB+AMGAfgDBgH4A/wB+AP4AfgAAAHwAAAB8AA
        AAPAAAADgAAAAcAAAAPgAAAH8BAYD/j//x8=
</value>
  </data>
</root>